{"version":3,"sources":["utils/get-console.ts","components/editor/code-editor.tsx","components/layout/nav-bar.tsx","components/article/markdown.tsx","App.tsx","utils/get-markdown.ts","utils/get-code.ts","reportWebVitals.ts","index.tsx"],"names":["getConsole","code","win","window","pythonCode","brython","e","console","error","toString","brythonConsole","CodeEditor","initialCode","useState","setCode","result","setResult","run","a","useEffect","interval","setInterval","clearInterval","document","onkeydown","ctrlKey","metaKey","key","preventDefault","className","onClick","width","wrapEnabled","mode","theme","onChange","value","name","editorProps","$blockScrolling","id","NavBar","aria-label","href","renderers","language","children","Markdown","props","supportLangs","getHashByUrl","URL","location","hash","split","extractOnlyHash","App","setHash","navigator","toLowerCase","lang","setLang","includes","onhashchange","markdown","useAsync","fetch","res","ok","Error","statusText","text","useMarkdown","useCode","loading","plugins","gfm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.02daff12.chunk.js","sourcesContent":["export default function getConsole(code: string): string {\n  const win = window as any;\n  try {\n    win.pythonCode = code;\n    win.brython();\n  } catch (e) {\n    console.error(e);\n    return e.toString();\n  }\n  return win.brythonConsole as string;\n}\n","import AceEditor from \"react-ace\";\nimport React, {useEffect, useState} from \"react\";\nimport \"../../index.css\";\nimport \"ace-builds/src-noconflict/mode-python\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport getConsole from \"../../utils/get-console\";\n\ntype CodeEditorProps = {\n  initialCode: string;\n};\n\nexport default function CodeEditor({ initialCode }: CodeEditorProps) {\n    const win = window as any;\n\n    const [code, setCode] = useState(initialCode);\n    const [result, setResult] = useState(\" \");\n\n    const onChange = (value: string) => {\n        setCode(value);\n    };\n\n    const run = async () => {\n        win.brythonConsole = 'in processing...';\n        await (async () => setResult(getConsole(code)))();\n    };\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setResult(win.brythonConsole)\n        }, 250);\n        return () => clearInterval(interval);\n    }, []);\n\n    document.onkeydown = async (e) => {\n        if ((e.ctrlKey || e.metaKey) && e.key === \"s\") {\n            e.preventDefault();\n            await run()\n        }\n    };\n\n    return (\n        <div className={\"space-y-0.5\"}>\n            <button\n                className={\"m-1 text-xl bg-blue-600 py-1 text-white w-20\"}\n        onClick={run}\n      >\n        실행\n      </button>\n      <AceEditor\n        width={\"100%\"}\n        wrapEnabled={true}\n        mode=\"python\"\n        theme=\"github\"\n        onChange={onChange}\n        value={code}\n        name=\"python-code\"\n        editorProps={{ $blockScrolling: false }}\n      />\n      <hr />\n      <pre className={\"text-white bg-black m\"} id={\"result\"}>\n        {result}\n      </pre>\n    </div>\n  );\n}\n","import React from \"react\";\nexport default function NavBar() {\n  return (\n    <nav\n      className=\"relative flex items-center justify-between sm:h-10 lg:justify-start bg-blue-400\"\n      aria-label=\"Global\"\n    >\n      <div className=\"hidden md:block md:ml-10 md:pr-4 md:space-x-8\">\n        <a href=\"#\" className=\"font-bold text-gray-700 hover:text-gray-900\">\n          A Tour of Python\n        </a>\n      </div>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport SyntaxHighlighter, {SyntaxHighlighterProps,} from \"react-syntax-highlighter\";\nimport ReactMarkdown, {ReactMarkdownProps} from \"react-markdown\";\n\nconst renderers = {\n  code: ({language, value}: SyntaxHighlighterProps) => {\n    return <SyntaxHighlighter language={language} children={value}/>;\n  },\n};\n\ntype MarkdownProps = {\n  children: string | undefined;\n} & ReactMarkdownProps;\n\nexport default function Markdown(props: MarkdownProps) {\n  return (\n    <ReactMarkdown renderers={renderers} children={props.children} {...props} />\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport \"./App.css\";\nimport CodeEditor from \"./components/editor/code-editor\";\nimport NavBar from \"./components/layout/nav-bar\";\nimport gfm from \"remark-gfm\";\nimport Markdown from \"./components/article/markdown\";\nimport {useMarkdown} from \"./utils/get-markdown\";\nimport {useCode} from \"./utils/get-code\";\n\nconst supportLangs = [\"ko-kr\"];\n\nconst extractOnlyHash = (hash: string) => {\n  return hash.split(\"#\")[1].split(\"?\")[0];\n};\nconst getHashByUrl = () => {\n  const hash = new URL(window.location.href).hash;\n  if (!hash) return \"\";\n  return extractOnlyHash(new URL(window.location.href).hash ?? \"\");\n};\n\nfunction App() {\n  const [hash, setHash] = useState(getHashByUrl());\n  const [lang, setLang] = useState(\n    window.navigator.language.toLowerCase() ?? \"ko-kr\"\n  );\n\n  useEffect(() => {\n    if (!supportLangs.includes(lang)) {\n      setLang(\"ko-kr\");\n    }\n  }, [lang]);\n\n  useEffect(() => {\n    if (!hash && lang) {\n      setHash(`intro/hello-world`);\n    }\n  }, [hash, lang]);\n\n  window.onhashchange = () => {\n    setHash(getHashByUrl());\n  };\n\n  const markdown = useMarkdown(lang, hash);\n  const code = useCode(lang, hash);\n\n  if (markdown.loading || code.loading) {\n    return <p>Loading...</p>;\n  }\n\n  if (markdown.error || !markdown.value) {\n    return <p>There is Something Wrong</p>;\n  }\n\n  return (\n      <div className={'h-screen'}>\n        <NavBar/>\n        <div className={\"container mx-auto h-full-without-nav\"}>\n          <div className=\"grid grid-cols-3 h-full\">\n            <div className=\"p-4 prose overflow-y-scroll\">\n              <Markdown plugins={[gfm]}>{markdown.value}</Markdown>\n            </div>\n            <div className=\"p-2 col-span-2 h-auto overflow-y-auto\t\">\n              <CodeEditor initialCode={code.value ?? \"\"}/>\n            </div>\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useAsync } from \"react-use\";\n\nexport const useMarkdown = (lang: string, hash: string) => {\n  return useAsync(async () => {\n    const res = await fetch(`./articles/${lang}/${hash}.md`);\n    if (!res.ok) throw new Error(res.statusText);\n    return await res.text();\n  }, [lang, hash]);\n};\n","import { useAsync } from \"react-use\";\n\nexport const useCode = (lang: string, hash: string) => {\n  return useAsync(async () => {\n    const res = await fetch(`./articles/${lang}/${hash}.py`);\n    if (!res.ok) throw new Error(res.statusText);\n    return await res.text();\n  }, [lang, hash]);\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}